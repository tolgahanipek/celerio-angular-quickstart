//
// Project home: https://github.com/jaxio/celerio-angular-quickstart
// 
// Source code generated by Celerio, an Open Source code generator by Jaxio.
// Documentation: http://www.jaxio.com/documentation/celerio/
// Source code: https://github.com/jaxio/celerio/
// Follow us on twitter: @jaxiosoft
// This header can be customized in Celerio conf...
// Template pack-angular:web/src/app/app.module.ts.p.vm
//
import { BrowserModule } from '@angular/platform-browser';
import { BrowserAnimationsModule } from '@angular/platform-browser/animations'
import { NgModule } from '@angular/core';
import { FormsModule } from '@angular/forms';
import { HttpClientModule } from '@angular/common/http';
import { RouterModule  }  from '@angular/router';
import { MatDatepickerModule, MatNativeDateModule, MatDialogModule, MatCardModule, MatIconModule, MatSelectModule, MatTabsModule, MatInputModule, MatButtonModule } from '@angular/material';
import { ConfirmDialogModule, FileUploadModule, PanelModule, GrowlModule, MenubarModule, DialogModule, ButtonModule, AutoCompleteModule, DataTableModule, SharedModule, DropdownModule,PickListModule,CheckboxModule,TriStateCheckboxModule, InputTextModule,InputTextareaModule,CalendarModule,PasswordModule,TabViewModule } from 'primeng/primeng';
import { ConfirmationService } from 'primeng/primeng';
import { AppComponent }   from './app.component';
import { HomeComponent }  from './home.component';
import { AuthService } from './service/auth.service';
import { MessageService } from './service/message.service';
import { routing }        from './app.routes';
import { EmailValidator } from './support/email.validator';
import { ConfirmDeleteDialogComponent } from './support/confirm-delete-dialog.component';
    
    
    zg-for(((zg-item:::[[[zg-entities]]]))){{{
        
        import { zg-upperFirstCase(((zg-item...zg-name)))Service } from './entities/[[[zg-item...zg-name]]]/[[[zg-item...zg-name]]].service';
         import { zg-upperFirstCase(((zg-item...zg-name)))ListComponent } from './entities/[[[zg-item...zg-name]]]/[[[zg-item...zg-name]]]-list.component';
         import { zg-upperFirstCase(((zg-item...zg-name)))DetailComponent } from './entities/[[[zg-item...zg-name]]]/[[[zg-item...zg-name]]]-detail.component';
         import { zg-upperFirstCase(((zg-item...zg-name)))LineComponent } from './entities/[[[zg-item...zg-name]]]/[[[zg-item...zg-name]]]-line.component';
         import { zg-upperFirstCase(((zg-item...zg-name)))CompleteComponent } from './entities/[[[zg-item...zg-name]]]/[[[zg-item...zg-name]]]-auto-complete.component';
        
        }}}
         
         @NgModule({
  declarations: [
    AppComponent,
    HomeComponent,
    EmailValidator,
    ConfirmDeleteDialogComponent
    zg-for(((zg-item:::[[[zg-entities]]]))){{{
    ,
    zg-upperFirstCase(((zg-item...zg-name)))ListComponent,
    zg-upperFirstCase(((zg-item...zg-name)))DetailComponent,
    zg-upperFirstCase(((zg-item...zg-name)))LineComponent,
    zg-upperFirstCase(((zg-item...zg-name)))CompleteComponent
    }}}
 
    ],
    
      imports: [
// angular
        BrowserModule,
        BrowserAnimationsModule,
        FormsModule,
        HttpClientModule,

// angular material,
        MatDatepickerModule,
        MatNativeDateModule,
        MatDialogModule,
        MatCardModule,
        MatIconModule,
        MatSelectModule,
        MatTabsModule,
        MatInputModule,
        MatButtonModule,

// primeng
        ConfirmDialogModule,
        FileUploadModule,
        PanelModule,
        GrowlModule,
        MenubarModule,
        DialogModule,
        ButtonModule,
        AutoCompleteModule,
        DataTableModule,
        SharedModule,
        DropdownModule,
        PickListModule,
        CheckboxModule,
        TriStateCheckboxModule,
        InputTextModule,
        InputTextareaModule,
        CalendarModule,
        PasswordModule,
        TabViewModule,

// our application routes
        routing
    ],
       providers: [
// our application entity services
  zg-for(((zg-item:::[[[zg-entities]]]))){{{
        zg-upperFirstCase(((zg-item...zg-name)))Service,
        }}}
     
// our application services
        AuthService,
        MessageService,

// primeng service
        ConfirmationService
    ],
    entryComponents: [ConfirmDeleteDialogComponent],
    bootstrap: [ AppComponent ]
})
export class AppModule {}  
    